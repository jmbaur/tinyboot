---
source: grub/src/lexer.rs
expression: tokens
---
[
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=false",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "textmode=false",
    ),
    Newline,
    Comment(
        "If you want to use serial for \"terminal_*\" commands, you need to set one up:\n   Example manual configuration:\n    â†’ serial --unit=0 --speed=115200 --word=8 --parity=no --stop=1\n This uses the defaults, and makes the serial terminal available.",
    ),
    Value(
        "set",
    ),
    Value(
        "with_serial=no",
    ),
    Newline,
    If,
    Value(
        "serial",
    ),
    Semicolon,
    Then,
    Value(
        "set",
    ),
    Value(
        "with_serial=yes",
    ),
    Semicolon,
    Fi,
    Newline,
    Value(
        "export",
    ),
    Value(
        "with_serial",
    ),
    Newline,
    Value(
        "clear",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "timeout=10",
    ),
    Newline,
    Newline,
    Comment(
        "This message will only be viewable when \"gfxterm\" is not used.",
    ),
    Value(
        "echo",
    ),
    Value(
        "",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "Loading graphical boot menu...",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "Press 't' to use the text boot menu on this console...",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "",
    ),
    Newline,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Newline,
    Value(
        "hiddenentry",
    ),
    Literal(
        "Text mode",
    ),
    Value(
        "--hotkey",
    ),
    Literal(
        "t",
    ),
    OpenBrace,
    Newline,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "textmode=true",
    ),
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "console",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "hiddenentry",
    ),
    Literal(
        "GUI mode",
    ),
    Value(
        "--hotkey",
    ),
    Literal(
        "g",
    ),
    OpenBrace,
    Newline,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "textmode=false",
    ),
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Newline,
    Comment(
        "If the parameter iso_path is set, append the findiso parameter to the kernel\n line. We need this to allow the nixos iso to be booted from grub directly.",
    ),
    If,
    Value(
        "[",
    ),
    Value(
        "${iso_path}",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "isoboot=\"findiso=${iso_path}\"",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Menu entries",
    ),
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "HiDPI, Quirks and Accessibility",
    ),
    Value(
        "--class",
    ),
    Value(
        "hidpi",
    ),
    Value(
        "--class",
    ),
    Value(
        "submenu",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Suggests resolution @720p",
    ),
    Value(
        "--class",
    ),
    Value(
        "hidpi-720p",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1280x720@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1280x720@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1280x720@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1280x720@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Suggests resolution @1080p",
    ),
    Value(
        "--class",
    ),
    Value(
        "hidpi-1080p",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1920x1080@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1920x1080@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1920x1080@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "video=1920x1080@60",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Comment(
        "If we boot into a graphical environment where X is autoran\n and always crashes, it makes the media unusable. Allow the user\n to disable this.",
    ),
    Value(
        "submenu",
    ),
    Value(
        "Disable display-manager",
    ),
    Value(
        "--class",
    ),
    Value(
        "quirk-disable-displaymanager",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "systemd.mask=display-manager.service",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "systemd.mask=display-manager.service",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "systemd.mask=display-manager.service",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "systemd.mask=display-manager.service",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Comment(
        "Some laptop and convertibles have the panel installed in an\n inconvenient way, rotated away from the keyboard.\n Those entries makes it easier to use the installer.",
    ),
    Value(
        "submenu",
    ),
    Value(
        "",
    ),
    OpenBrace,
    Value(
        "return",
    ),
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Rotate framebuffer Clockwise",
    ),
    Value(
        "--class",
    ),
    Value(
        "rotate-90cw",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:1",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:1",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:1",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:1",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Rotate framebuffer Upside-Down",
    ),
    Value(
        "--class",
    ),
    Value(
        "rotate-180",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:2",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:2",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:2",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:2",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Rotate framebuffer Counter-Clockwise",
    ),
    Value(
        "--class",
    ),
    Value(
        "rotate-90ccw",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:3",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:3",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:3",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "fbcon=rotate:3",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Comment(
        "As a proof of concept, mainly. (Not sure it has accessibility merits.)",
    ),
    Value(
        "submenu",
    ),
    Value(
        "",
    ),
    OpenBrace,
    Value(
        "return",
    ),
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Use black on white",
    ),
    Value(
        "--class",
    ),
    Value(
        "accessibility-blakconwhite",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "vt.default_red=0xFF,0xBC,0x4F,0xB4,0x56,0xBC,0x4F,0x00,0xA1,0xCF,0x84,0xCA,0x8D,0xB4,0x84,0x68",
    ),
    Value(
        "vt.default_grn=0xFF,0x55,0xBA,0xBA,0x4D,0x4D,0xB3,0x00,0xA0,0x8F,0xB3,0xCA,0x88,0x93,0xA4,0x68",
    ),
    Value(
        "vt.default_blu=0xFF,0x58,0x5F,0x58,0xC5,0xBD,0xC5,0x00,0xA8,0xBB,0xAB,0x97,0xBD,0xC7,0xC5,0x68",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "vt.default_red=0xFF,0xBC,0x4F,0xB4,0x56,0xBC,0x4F,0x00,0xA1,0xCF,0x84,0xCA,0x8D,0xB4,0x84,0x68",
    ),
    Value(
        "vt.default_grn=0xFF,0x55,0xBA,0xBA,0x4D,0x4D,0xB3,0x00,0xA0,0x8F,0xB3,0xCA,0x88,0x93,0xA4,0x68",
    ),
    Value(
        "vt.default_blu=0xFF,0x58,0x5F,0x58,0xC5,0xBD,0xC5,0x00,0xA8,0xBB,0xAB,0x97,0xBD,0xC7,0xC5,0x68",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "vt.default_red=0xFF,0xBC,0x4F,0xB4,0x56,0xBC,0x4F,0x00,0xA1,0xCF,0x84,0xCA,0x8D,0xB4,0x84,0x68",
    ),
    Value(
        "vt.default_grn=0xFF,0x55,0xBA,0xBA,0x4D,0x4D,0xB3,0x00,0xA0,0x8F,0xB3,0xCA,0x88,0x93,0xA4,0x68",
    ),
    Value(
        "vt.default_blu=0xFF,0x58,0x5F,0x58,0xC5,0xBD,0xC5,0x00,0xA8,0xBB,0xAB,0x97,0xBD,0xC7,0xC5,0x68",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "vt.default_red=0xFF,0xBC,0x4F,0xB4,0x56,0xBC,0x4F,0x00,0xA1,0xCF,0x84,0xCA,0x8D,0xB4,0x84,0x68",
    ),
    Value(
        "vt.default_grn=0xFF,0x55,0xBA,0xBA,0x4D,0x4D,0xB3,0x00,0xA0,0x8F,0xB3,0xCA,0x88,0x93,0xA4,0x68",
    ),
    Value(
        "vt.default_blu=0xFF,0x58,0x5F,0x58,0xC5,0xBD,0xC5,0x00,0xA8,0xBB,0xAB,0x97,0xBD,0xC7,0xC5,0x68",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Comment(
        "Serial access is a must!",
    ),
    Value(
        "submenu",
    ),
    Value(
        "",
    ),
    OpenBrace,
    Value(
        "return",
    ),
    CloseBrace,
    Newline,
    Value(
        "submenu",
    ),
    Value(
        "Serial console=ttyS0,115200n8",
    ),
    Value(
        "--class",
    ),
    Value(
        "serial",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Menu configuration",
    ),
    Newline,
    Comment(
        "Search using a \"marker file\"",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--file",
    ),
    Value(
        "/EFI/nixos-installer-image",
    ),
    Newline,
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "insmod",
    ),
    Value(
        "png",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxpayload=keep",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "gfxmode=1920x1080,1366x768,1280x720,1024x768,800x600,auto",
    ),
    Newline,
    Newline,
    Comment(
        "Fonts can be loaded?\n (This font is assumed to always be provided as a fallback by NixOS)",
    ),
    If,
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/unicode.pf2",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "set",
    ),
    Value(
        "with_fonts=true",
    ),
    Newline,
    Fi,
    Newline,
    If,
    Value(
        "[",
    ),
    Value(
        "$textmode",
    ),
    Value(
        "!=",
    ),
    Value(
        "true",
    ),
    Value(
        "-a",
    ),
    Value(
        "$with_fonts",
    ),
    Value(
        "==",
    ),
    Value(
        "true",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Comment(
        "Use graphical term, it can be either with background image or a theme.\n input is \"console\", while output is \"gfxterm\".\n This enables \"serial\" input and output only when possible.\n Otherwise the failure mode is to not even enable gfxterm.",
    ),
    If,
    Value(
        "test",
    ),
    Value(
        "$with_serial",
    ),
    Value(
        "==",
    ),
    Value(
        "yes",
    ),
    Semicolon,
    Then,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Value(
        "serial",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Value(
        "serial",
    ),
    Newline,
    Else,
    Newline,
    Value(
        "terminal_output",
    ),
    Value(
        "gfxterm",
    ),
    Newline,
    Value(
        "terminal_input",
    ),
    Value(
        "console",
    ),
    Newline,
    Fi,
    Newline,
    Else,
    Newline,
    Comment(
        "Sets colors for the non-graphical term.",
    ),
    Value(
        "set",
    ),
    Value(
        "menu_color_normal=cyan/blue",
    ),
    Newline,
    Value(
        "set",
    ),
    Value(
        "menu_color_highlight=white/blue",
    ),
    Newline,
    Fi,
    Newline,
    Newline,
    Comment(
        "Sets theme.",
    ),
    Value(
        "set",
    ),
    Value(
        "theme=($root)/EFI/boot/grub-theme/theme.txt",
    ),
    Newline,
    Comment(
        "Load theme fonts",
    ),
    Value(
        "loadfont",
    ),
    Value(
        "($root)/EFI/boot/grub-theme/dejavu.pf2",
    ),
    Newline,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer ",
    ),
    Value(
        "--class",
    ),
    Value(
        "installer",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "console=ttyS0,115200n8",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (nomodeset)",
    ),
    Value(
        "--class",
    ),
    Value(
        "nomodeset",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "console=ttyS0,115200n8",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "nomodeset",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (copytoram)",
    ),
    Value(
        "--class",
    ),
    Value(
        "copytoram",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "console=ttyS0,115200n8",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "copytoram",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "NixOS 22.11.4369.99fe1b87052 Installer (debug)",
    ),
    Value(
        "--class",
    ),
    Value(
        "debug",
    ),
    OpenBrace,
    Newline,
    Value(
        "linux",
    ),
    Value(
        "/boot/bzImage",
    ),
    Value(
        "${isoboot}",
    ),
    Value(
        "init=/nix/store/2ghlsb5h1d9p13j255hlbz4amp8p4k84-nixos-system-nixos-22.11.4369.99fe1b87052/init",
    ),
    Value(
        "console=ttyS0,115200n8",
    ),
    Value(
        "root=LABEL=nixos-minimal-22.11-x86_64",
    ),
    Value(
        "boot.shell_on_fail",
    ),
    Value(
        "nohibernate",
    ),
    Value(
        "loglevel=4",
    ),
    Value(
        "debug",
    ),
    Newline,
    Value(
        "initrd",
    ),
    Value(
        "/boot/initrd",
    ),
    Newline,
    CloseBrace,
    Newline,
    Newline,
    CloseBrace,
    Newline,
    CloseBrace,
    Newline,
    Newline,
    Comment(
        "GRUB apparently cannot do \"chainloader\" operations on \"CD\".",
    ),
    If,
    Value(
        "[",
    ),
    Value(
        "$root",
    ),
    Value(
        "!=",
    ),
    Value(
        "cd0",
    ),
    CloseBracket,
    Semicolon,
    Then,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "rEFInd",
    ),
    Value(
        "--class",
    ),
    Value(
        "refind",
    ),
    OpenBrace,
    Newline,
    Comment(
        "Force root to be the FAT partition\n Otherwise it breaks rEFInd's boot",
    ),
    Value(
        "search",
    ),
    Value(
        "--set=root",
    ),
    Value(
        "--no-floppy",
    ),
    Value(
        "--fs-uuid",
    ),
    Value(
        "1234-5678",
    ),
    Newline,
    Value(
        "chainloader",
    ),
    Value(
        "($root)/EFI/boot/refind_x64.efi",
    ),
    Newline,
    CloseBrace,
    Newline,
    Fi,
    Newline,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "Firmware Setup",
    ),
    Value(
        "--class",
    ),
    Value(
        "settings",
    ),
    OpenBrace,
    Newline,
    Value(
        "fwsetup",
    ),
    Newline,
    Value(
        "clear",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "If you see this message, your EFI system doesn't support this feature.",
    ),
    Newline,
    Value(
        "echo",
    ),
    Value(
        "",
    ),
    Newline,
    CloseBrace,
    Newline,
    Value(
        "menuentry",
    ),
    Literal(
        "Shutdown",
    ),
    Value(
        "--class",
    ),
    Value(
        "shutdown",
    ),
    OpenBrace,
    Newline,
    Value(
        "halt",
    ),
    Newline,
    CloseBrace,
    Newline,
]
